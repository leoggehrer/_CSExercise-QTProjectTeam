//@GeneratedCode
namespace QTProjectTeam.AspMvc.Models.App
{
    using System;
    ///
    /// Generated by the generator
    ///
    
    public partial class Member
    {
        ///
        /// Generated by the generator
        ///
        static Member()
        {
            ClassConstructing();
            ClassConstructed();
        }
        static partial void ClassConstructing();
        static partial void ClassConstructed();
        
        ///
        /// Generated by the generator
        ///
        public Member()
        {
            Constructing();
            
            Constructed();
        }
        partial void Constructing();
        partial void Constructed();
        ///
        /// Generated by the generator
        ///
        
        public System.String Name { get; set; } = string.Empty;
        ///
        /// Generated by the generator
        ///
        
        public System.String Responsibilities { get; set; } = string.Empty;
        ///
        /// Generated by the generator
        ///
        
        public System.Collections.Generic.List<QTProjectTeam.AspMvc.Models.App.Project> Projects { get; set; } = new();
        ///
        /// Generated by the generator
        ///
        public static QTProjectTeam.AspMvc.Models.App.Member Create()
        {
            BeforeCreate();
            var result = new QTProjectTeam.AspMvc.Models.App.Member();
            AfterCreate(result);
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public static QTProjectTeam.AspMvc.Models.App.Member Create(object other)
        {
            BeforeCreate(other);
            var result = new QTProjectTeam.AspMvc.Models.App.Member();
            CommonBase.Extensions.ObjectExtensions.CopyFrom(result, other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate();
        static partial void AfterCreate(QTProjectTeam.AspMvc.Models.App.Member instance);
        static partial void BeforeCreate(object other);
        static partial void AfterCreate(QTProjectTeam.AspMvc.Models.App.Member instance, object other);
        ///
        /// Generated by the generator
        ///
        public static QTProjectTeam.AspMvc.Models.App.Member Create(QTProjectTeam.Logic.Models.App.Member other)
        {
            BeforeCreate(other);
            var result = new QTProjectTeam.AspMvc.Models.App.Member();
            result.CopyProperties(other);
            AfterCreate(result, other);
            return result;
        }
        static partial void BeforeCreate(QTProjectTeam.Logic.Models.App.Member other);
        static partial void AfterCreate(QTProjectTeam.AspMvc.Models.App.Member instance, QTProjectTeam.Logic.Models.App.Member other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTProjectTeam.Logic.Models.App.Member other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                Name = other.Name;
                Responsibilities = other.Responsibilities;
                Projects = other.Projects.Select(e => QTProjectTeam.AspMvc.Models.App.Project.Create((object)e)).ToList();
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTProjectTeam.Logic.Models.App.Member other, ref bool handled);
        partial void AfterCopyProperties(QTProjectTeam.Logic.Models.App.Member other);
        ///
        /// Generated by the generator
        ///
        public void CopyProperties(QTProjectTeam.AspMvc.Models.App.Member other)
        {
            bool handled = false;
            BeforeCopyProperties(other, ref handled);
            if (handled == false)
            {
                Name = other.Name;
                Responsibilities = other.Responsibilities;
                Projects = other.Projects.Select(e => QTProjectTeam.AspMvc.Models.App.Project.Create((object)e)).ToList();
                Id = other.Id;
            }
            AfterCopyProperties(other);
        }
        partial void BeforeCopyProperties(QTProjectTeam.AspMvc.Models.App.Member other, ref bool handled);
        partial void AfterCopyProperties(QTProjectTeam.AspMvc.Models.App.Member other);
        ///
        /// Generated by the generator
        ///
        public override bool Equals(object? obj)
        {
            bool result = false;
            if (obj is Models.App.Member other)
            {
                result = Id == other.Id;
            }
            return result;
        }
        ///
        /// Generated by the generator
        ///
        public override int GetHashCode()
        {
            return this.CalculateHashCode(Name, Responsibilities, Projects, Id);
        }
    }
}
